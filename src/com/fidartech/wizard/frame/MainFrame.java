/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.fidartech.wizard.frame;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.processdigidaroo.database.json.DatabaseConfig;
import com.processdigidaroo.xml.handle.ServiceSetting;
import com.processdigidaroo.xml.handle.database;
import com.processdigidaroo.xml.handle.message;
import com.processdigidaroo.xml.handle.root;
import java.awt.Desktop;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;

/**
 *
 * @author alirezakhtm
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        Thread th = new Thread(new Runnable() {
            @Override
            public void run() {
                try{
                    Font font = Font.createFont(Font.TRUETYPE_FONT, getClass().getResource("cour.ttf").openStream());
                    GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
                    ge.registerFont(font);
                    font = font.deriveFont(Font.BOLD);
                    font = font.deriveFont(14f);
                    txtReportConsoul.setFont(font);
                }catch(Exception e){
                    System.err.println("Font not found ..." + e);
                }
            }
        });
        th.start();
        txtReportConsoul.setText(">> Terminal ...\n");
        System.setOut(new PrintStream(new OutputStream() {
            @Override
            public void write(int b) throws IOException {
                char ch = (char)((byte)b);
                txtReportConsoul.append(ch+"");
            }
        }));
        System.setErr(new PrintStream(new OutputStream() {
            @Override
            public void write(int b) throws IOException {
                char ch = (char)((byte)b);
                txtReportConsoul.append(ch+"");
            }
        }));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnBrows = new javax.swing.JButton();
        txtOutput = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        txtSPID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtDbName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTagName = new javax.swing.JTextField();
        txtServiceID = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtApplicationName = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtReportConsoul = new javax.swing.JTextArea();
        btnGenerate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Wizard Web Service");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("Output Directory: ");

        btnBrows.setText("...");
        btnBrows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowsActionPerformed(evt);
            }
        });

        txtOutput.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtOutput)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBrows)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrows))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Database Setting"));

        jLabel4.setText("Username: ");

        jLabel8.setText("SPID: ");

        jLabel3.setText("Database Name: ");

        jLabel6.setText("Application Name: ");

        jLabel9.setText("Service ID:");

        jLabel5.setText("Password: ");

        jLabel7.setText("Tag Name: ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSPID, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtServiceID, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTagName, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDbName, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtApplicationName, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDbName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTagName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApplicationName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSPID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtServiceID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtReportConsoul.setEditable(false);
        txtReportConsoul.setBackground(new java.awt.Color(0, 0, 0));
        txtReportConsoul.setColumns(20);
        txtReportConsoul.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        txtReportConsoul.setForeground(new java.awt.Color(51, 153, 0));
        txtReportConsoul.setRows(5);
        jScrollPane1.setViewportView(txtReportConsoul);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        btnGenerate.setText("Generate");
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnGenerate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGenerate)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowsActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setDialogTitle("Select Folder");
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int ans = jfc.showDialog(this, "Select Directory");
        if(ans == JFileChooser.APPROVE_OPTION){
            String address = jfc.getSelectedFile().getPath();
            txtOutput.setText(address);
            System.out.println("Output directory choosen.");
        }
    }//GEN-LAST:event_btnBrowsActionPerformed

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
        if(!checkAllInput()){
            Thread thProcess = new Thread(new Runnable() {
                @Override
                public void run() {
                    processStart();
                }
            });
            thProcess.start();
        }else{
            System.err.println("Some inputs are incorrect. :-(");
        }
    }//GEN-LAST:event_btnGenerateActionPerformed

    private void processStart(){
        /***********************************************************************
         *                         Create directories                          *
         ***********************************************************************/
        // create xml-config directory
        File dir = new File(txtOutput.getText() + "/xml-config");
        dir.mkdir();
        System.out.println("xml-config folder created.");
        // create temporary directory
        File dirTemp = new File(txtOutput.getText() + "/temporary");
        dirTemp.mkdir();
        System.out.println("temporary folder created.");
        // create lib directory
        File dirLib = new File(txtOutput.getText() + "/lib");
        dirLib.mkdir();
        System.out.println("lib folder created.");
        // creating backup directory
        File dirBackup = new File(txtOutput.getText() + "/backup");
        dirBackup.mkdir();
        System.out.println("backup folder created.");
        /***********************************************************************
         *                          Create XML file                            *
         ***********************************************************************/
        root r = new root();
        r.setDb(new database(txtUsername.getText(), txtPassword.getText(),
                txtDbName.getText(), "MySQL", txtTagName.getText()));
        r.setFirstPriceFailed(false);
        r.setLstPrice(new ArrayList<>());
        r.setMsg(new message(false, false));
        r.setServiceSetting(new ServiceSetting(txtSPID.getText(), txtServiceID.getText()));
        r.setStepSize(500);
        r.setTestmode(false);
        r.setThreadNumber(152);
        r.setThreadPoolConnection(3000);
        r.setThreadPoolSize(150);
        r.setUseXMLFile(true);

        File xmlConfig = new File(txtOutput.getText() + "/xml-config/config.xml");
        try {
            JAXBContext context = JAXBContext.newInstance(root.class);
            Marshaller marshaller = context.createMarshaller();
            marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
            marshaller.marshal(r, xmlConfig);
            System.out.println("config.xml created.");
        } catch (JAXBException ex) {
            System.err.println(ex);
        }
        /***********************************************************************
         *                          Create JSON file                           *
         ***********************************************************************/
        DatabaseConfig databaseConfig = new DatabaseConfig();
        String tblMessage = "tbl_message_" + txtApplicationName.getText();
        String tblReport = "tbl_Report_" + txtApplicationName.getText();
        String tblTime = "tbl_time_manage_" + txtApplicationName.getText();
        databaseConfig.setMessage(tblMessage);
        databaseConfig.setReport(tblReport);
        databaseConfig.setTime(tblTime);
        Gson gson = new GsonBuilder().create();
        String strGson = gson.toJson(databaseConfig, DatabaseConfig.class);
        try{
            Files.write(Paths.get(txtOutput.getText() + "/xml-config/config.json"), 
                    strGson.getBytes(), StandardOpenOption.CREATE_NEW);
            System.out.println("config.json created");
        }catch(IOException e){
            System.err.println(e);
        }
        /***********************************************************************
         *                  Create tables on MySQL database                    *
         ***********************************************************************/
        Connection conn;
        Statement stm;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/" 
                    + txtDbName.getText() 
                    + "?useSSL=false&userUnicode=true&characterset=utf-8",
                    txtUsername.getText(), txtPassword.getText());
            System.out.println("Connected to database for creating tables ...");
            stm = conn.createStatement();
            String qCreateMessageTbl = "CREATE TABLE `" + tblMessage + "` (\n" +
                    "  `indx` int(11) NOT NULL AUTO_INCREMENT,\n" +
                    "  `dateSend` text COLLATE utf8_persian_ci,\n" +
                    "  `successfullPaymentMessage` longtext COLLATE utf8_persian_ci,\n" +
                    "  `failedPaymentMessage` longtext COLLATE utf8_persian_ci,\n" +
                    "  PRIMARY KEY (`indx`)\n" +
                    ") ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COLLATE=utf8_persian_ci";
            String qCreateReportTbl = "CREATE TABLE `" + tblReport + "` (\n" +
                                        "  `indx` int(11) NOT NULL AUTO_INCREMENT,\n" +
                                        "  `customerNumber` text CHARACTER SET utf8 COLLATE utf8_persian_ci,\n" +
                                        "  `cash` text CHARACTER SET utf8 COLLATE utf8_persian_ci,\n" +
                                        "  `successNumber` text CHARACTER SET utf8 COLLATE utf8_persian_ci,\n" +
                                        "  `failedNumber` text CHARACTER SET utf8 COLLATE utf8_persian_ci,\n" +
                                        "  `priceList` text CHARACTER SET utf8 COLLATE utf8_persian_ci,\n" +
                                        "  `successList` text CHARACTER SET utf8 COLLATE utf8_persian_ci,\n" +
                                        "  `failedList` text CHARACTER SET utf8 COLLATE utf8_persian_ci,\n" +
                                        "  `datePayment` text CHARACTER SET utf8 COLLATE utf8_persian_ci,\n" +
                                        "  `processStartedTime` text,\n" +
                                        "  `processFinishedTime` text,\n" +
                                        "  `failedErrorList` longtext,\n" +
                                        "  PRIMARY KEY (`indx`)\n" +
                                        ") ENGINE=InnoDB AUTO_INCREMENT=52 DEFAULT CHARSET=latin1";
            String qCreateTimeTbl = "CREATE TABLE `" + tblTime + "` (\n" +
                                    "  `indx` int(11) NOT NULL AUTO_INCREMENT,\n" +
                                    "  `dayOfWeek` text COLLATE utf8_persian_ci,\n" +
                                    "  `StartTime` text COLLATE utf8_persian_ci,\n" +
                                    "  `StopTime` text COLLATE utf8_persian_ci,\n" +
                                    "  PRIMARY KEY (`indx`)\n" +
                                    ") ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 COLLATE=utf8_persian_ci";
            stm.execute(qCreateMessageTbl);
            System.out.println("Message table created.");
            stm.execute(qCreateReportTbl);
            System.out.println("Report table created.");
            stm.execute(qCreateTimeTbl);
            System.out.println("Time table created.");
            conn.close();
            System.out.println("Disconnected from database successfuly");                
        }catch(SQLException | ClassNotFoundException e){
            System.err.println(e);
        }
        /***********************************************************************
         *                      Copy JAR files to directory                    *
         ***********************************************************************/
        System.out.println("Copying files ...");
        try{
            // copy WebServiceManager.jar file
            File jarWebServiceSource = new File("jarfiles/WebServiceManager.jar");
            File jarWebServiceDist = new File(txtOutput.getText() + "/WebServiceManager.jar");
            Files.copy(jarWebServiceSource.toPath(), jarWebServiceDist.toPath());
            System.out.println("WebServiceManager.jar copied.");
            // copy lib folder
            File[] allLibs = new File("jarfiles/lib/").listFiles();
            for(File jf : allLibs){
                File disFile = new File(txtOutput.getText() + "/lib/" + jf.getName());
                Files.copy(jf.toPath(), disFile.toPath());
                System.out.println(jf.getName() + " copied.");
            }
            File icon1 = new File("jarfiles/tray.png");
            Files.copy(icon1.toPath(), new File(txtOutput.getText() + "/tray.png").toPath());
            System.out.println("first icon file copied");
            File icon2 = new File("jarfiles/internet.png");
            Files.copy(icon2.toPath(), new File(txtOutput.getText() + "/internet.png").toPath());
            System.out.println("Second icon file copied.");
            System.out.println("All files copied directory.");
            File of = new File(txtOutput.getText());
            Desktop.getDesktop().open(of);
        }catch(Exception e){
            System.err.println(">> " + e);
        }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrows;
    private javax.swing.JButton btnGenerate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtApplicationName;
    private javax.swing.JTextField txtDbName;
    private javax.swing.JTextField txtOutput;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextArea txtReportConsoul;
    private javax.swing.JTextField txtSPID;
    private javax.swing.JTextField txtServiceID;
    private javax.swing.JTextField txtTagName;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private boolean checkAllInput() {
        return 
                (txtApplicationName.getText().isEmpty() ||
                txtDbName.getText().isEmpty() ||
                txtOutput.getText().isEmpty() ||
                txtReportConsoul.getText().isEmpty() ||
                txtSPID.getText().isEmpty() ||
                txtServiceID.getText().isEmpty() ||
                txtTagName.getText().isEmpty() ||
                txtUsername.getText().isEmpty());
    }
}
